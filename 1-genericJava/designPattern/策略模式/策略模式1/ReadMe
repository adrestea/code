策略模式(Strategy Pattern)是一种比较简单的模式,也叫做政策模式(Policy Pattern)。其定义如下: Define a family of algorithms,encapsulate each one,and make them interchangeable.(定义一组算法,将每个算法都封装起来,并且使它们之间可以互换。)

优点：
● 算法可以自由切换
● 避免使用多重条件判断
● 扩展性良好

缺点：
● 策略类数量增多，每一个策略都是一个类,复用的可能性很小,类数量增多。
● 所有的策略类都需要对外暴露。上层模块必须知道有哪些策略,然后才能决定使用哪一个策略,这与迪米特法则是相违背的,可以使用其他模式来修正这个缺陷,如工厂方法模式、代理模式或享元模式

使用场景
● 多个类只有在算法或行为上稍有不同的场景。
● 算法需要自由切换的场景。
● 需要屏蔽算法规则的场景。
